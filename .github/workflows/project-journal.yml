name: project-journal
on:
  schedule:
    - cron: "0 8 * * *"   # daily 08:00 UTC
  workflow_dispatch:

jobs:
  snapshot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Build journal
        id: journal
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const day = new Date().toISOString().slice(0,10);
            const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: "open" });
            const commits = await github.paginate(github.rest.repos.listCommits, { owner, repo, sha: "main", per_page: 10 });
            const runs = await github.paginate(github.rest.actions.listWorkflowRunsForRepo, { owner, repo, per_page: 10 });
            const line = a => a.map(s => `- ${s}`).join("\n");
            const prLines = prs.map(p => `#${p.number} ${p.title} — ${p.user.login} (${p.head.ref})`);
            const commitLines = commits.map(c => `${c.sha.slice(0,7)} ${c.commit.message.split("\n")[0]} — ${c.commit.author.name}`);
            const runLines = runs.map(r => `${r.name} #${r.run_number} — ${r.status}/${r.conclusion} @ ${r.head_branch}`);
            const content = `# Journal — ${day}

**Open PRs**
${line(prLines) || "*none*"}

**Recent commits (main)**
${line(commitLines)}

**Recent workflow runs**
${line(runLines)}

**Notes**
- Add context or risks here.
`;
            const fs = require('fs');
            const path = `docs/journal/${day}.md`;
            fs.mkdirSync('docs/journal', { recursive: true });
            fs.writeFileSync(path, content);
            core.setOutput('path', path);
      - name: Commit journal
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ steps.journal.outputs.path }}
          message: "chore(journal): snapshot for ${{ steps.journal.outputs.path }}"
          default_author: github_actions
